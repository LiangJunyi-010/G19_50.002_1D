// Input: clk, rst, hit is a 1-bit input
// Output: io_led is a 8-bit output, io_seg is a 8-bit output, io_sel is a 4-bit output
// if input signal hit == 1, increase the current score by 1
module score (
    input clk,   
    input rst,           // 100MHz clock
    input rst_button,
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input hit  // signal that decides if to increase score by 1
  ) {
  
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.

    edge_detector inc_detector (#RISE(1), #FALL(0));
    
    .rst(rst){
        multi_seven_seg seg;
        multi_incre dec_ctr;
    }
  }

  
  always {
  dec_ctr.rst_button = rst_button;
    inc_detector.in = hit;

    //display score(increment if correct)
    dec_ctr.inc = inc_detector.out;
    
    
    seg.values = dec_ctr.digits;
        
    io_seg = ~seg.seg;
    io_sel = seg.sel;
  }
} 
