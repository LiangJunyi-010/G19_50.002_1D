module compare (
// z, v, n are all 1-bit inputs. ALUFN is a 4-bit input
// 16 bits output (0 or 1)
    input z,
    input v,
    input n,
    input alufn_signal[4],
    output out[16] 
  ) {
  
  always {
    out = 16b0;
    case (alufn_signal) {
      default: out[0] = 0; 
      b0011: out[0] = z;      // alufn_signal b0011 denotes CMPEQ operation
      b0100: out[0] = n ^ v;    // alufn_signal b0100 denotes CMPLT operation
      b0101: out[0] = z | (n ^ v);  // alufn_signal b0101 denotes CMPLE operation
    }
  }
}
