/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module adder_20 (
    input [15:0] a,
    input [15:0] b,
    input [3:0] alufn_signal,
    output reg [15:0] out,
    output reg [0:0] z,
    output reg [0:0] v,
    output reg [0:0] n
  );
  
  
  
  reg [15:0] s;
  
  reg v0;
  
  always @* begin
    s = 16'h0000;
    v0 = 1'h0;
    
    case (alufn_signal)
      4'h0: begin
        s = a + b;
        v0 = (a[15+0-:1] & (b[15+0-:1] ^ alufn_signal[0+0-:1]) & !s[15+0-:1]) | (!a[15+0-:1] & !(b[15+0-:1] ^ alufn_signal[0+0-:1]) & s[15+0-:1]);
      end
      4'h1: begin
        s = a - b;
        v0 = (a[15+0-:1] & (b[15+0-:1] ^ alufn_signal[0+0-:1]) & !s[15+0-:1]) | (!a[15+0-:1] & !(b[15+0-:1] ^ alufn_signal[0+0-:1]) & s[15+0-:1]);
      end
      4'h3: begin
        s = a - b;
        v0 = (a[15+0-:1] & (b[15+0-:1] ^ 1'h1) & !s[15+0-:1]) | (!a[15+0-:1] & !(b[15+0-:1] ^ 1'h1) & s[15+0-:1]);
      end
      4'h4: begin
        s = a - b;
        v0 = (a[15+0-:1] & (b[15+0-:1] ^ 1'h1) & !s[15+0-:1]) | (!a[15+0-:1] & !(b[15+0-:1] ^ 1'h1) & s[15+0-:1]);
      end
      4'h5: begin
        s = a - b;
        v0 = (a[15+0-:1] & (b[15+0-:1] ^ 1'h1) & !s[15+0-:1]) | (!a[15+0-:1] & !(b[15+0-:1] ^ 1'h1) & s[15+0-:1]);
      end
      default: begin
        s = 16'h0000;
      end
    endcase
    n = s[15+0-:1];
    v = v0;
    z = ~(|s);
    out = s;
  end
endmodule
